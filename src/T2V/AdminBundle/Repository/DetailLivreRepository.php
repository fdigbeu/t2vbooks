<?php

namespace T2V\AdminBundle\Repository;

/**
 * DetailLivreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DetailLivreRepository extends \Doctrine\ORM\EntityRepository
{
	// Détail du sommaire
	public function getSommaire()
	{
		$query = $this->createQueryBuilder('d')
		->select('d')
		->leftJoin('d.categorie', 'c')
		->addSelect('c')
		->leftJoin('d.souscategorie', 's')
		->addSelect('s')
		->orderBy('d.id', 'ASC');
		//--
		$detailLivres = $query->getQuery()->getResult();
		//--
		$resultatTmp = array();
		$resultat = array();
		$titreSommaire = array();
		$sousTitreSommaire = array();
		$titreNumero = array();
		//--
		foreach ($detailLivres as $detail){
			if($detail->getCategorie() && $detail->getCategorie()->getTitre()){
				$lbNumero = trim($detail->getCategorie()->getNumero());
				$lbTitreSommaire = trim($detail->getCategorie()->getTitre());
				//--
				if(!isset($titreSommaire[$lbTitreSommaire])){
					$titreSommaire[$lbTitreSommaire] = "OK";
					$resultatTmp[$lbTitreSommaire] = array();
					if($lbNumero){
						$titreNumero[$lbTitreSommaire] = $lbNumero;
					}
				}
				//--
				if($detail->getSousCategorie() && $detail->getSousCategorie()->getTitre()){
					$lbSousTitreSommaire = trim($detail->getSousCategorie()->getTitre());
					$lbSousTitreNumero = trim($detail->getSousCategorie()->getNumero());
					if(!isset($sousTitreSommaire[$lbTitreSommaire][$lbSousTitreSommaire])){
						$sousTitreSommaire[$lbTitreSommaire][$lbSousTitreSommaire] = "OK";
						$resultatTmp[$lbTitreSommaire][] = array(
								"sousTitreKeyCode" => substr(hash("sha256", $lbTitreSommaire), 0, 10)."_".substr(hash("sha256", $lbSousTitreSommaire), 0, 10), 
								"sousTitreValue" => str_ireplace("’", "'", $lbSousTitreSommaire) ,
								"sousTitreNumero" => $lbSousTitreNumero
						);
					}
				}
			}
		}
		//--
		foreach ($resultatTmp as $key => $value){
			$resultat[]=array(
					"titre" => $key, 
					"titreNumero" => isset($titreNumero[$key]) ? $titreNumero[$key] : "",
					"titreKeycode" => substr(hash("sha256", $key), 0, 10), 
					"soustitre" => str_ireplace("’", "'", $value)
			);
		}
		//--
		return $resultat;
	}
	
	// Contenu du livre
	public function getContenuSommaire()
	{
		$query = $this->createQueryBuilder('d')
		->select('d')
		->leftJoin('d.categorie', 'c')
		->addSelect('c')
		->leftJoin('d.souscategorie', 's')
		->addSelect('s')
		->orderBy('d.id', 'ASC');
		//--
		$detailLivres = $query->getQuery()->getResult();
		//--
		$resultatTmp = array();
		$resultat = array();
		foreach ($detailLivres as $detail){
			// If subTitle exists
			$labelKey = "";
			$labelContent = $detail->getContenu() ? $detail->getContenu() : "";
			if($detail->getSousCategorie() && $detail->getSousCategorie()->getTitre()){
				$labelKey = substr(hash("sha256", $detail->getCategorie()->getTitre()), 0, 10)."_".substr(hash("sha256", $detail->getSousCategorie()->getTitre()), 0, 10);
			}
			elseif ($detail->getCategorie() && $detail->getCategorie()->getTitre()){
				$labelKey = substr(hash("sha256", $detail->getCategorie()->getTitre()), 0, 10);
			}
			//--
			$resultatTmp[$labelKey][] = str_ireplace("’", "'", $labelContent);
		}
		//--
		foreach ($resultatTmp as $key => $value){
			$resultat[]=array(
				"keycode" => $key, 
				"contenu" => $value
			);
		}
		//--
		return $resultat;
	}
	
	public function getJsonContenuSommaire()
	{
		$resultat = $this->getContenuSommaire();
		return json_encode($resultat);
	}
	
	public function getJsonSommaire()
	{
		$resultat = $this->getSommaire();
		return json_encode($resultat);
	}
}
